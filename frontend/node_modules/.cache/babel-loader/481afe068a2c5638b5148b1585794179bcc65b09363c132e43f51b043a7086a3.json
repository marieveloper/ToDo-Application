{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\nexport default {\n  name: \"CatCreate\",\n  data() {\n    return {\n      cat: {\n        name: \"\",\n        ageInYears: 0,\n        picUrl: \"\"\n      }\n    };\n  },\n  methods: {\n    // executed on form submit\n    onSubmit: function (event) {\n      event.preventDefault();\n      axios.post(`${config.apiBaseUrl}/cats`, this.cat).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // show success message\n        showToastMessage(this, \"Alert\", `Successfully created a new cat with ID ${response.data.id}!`, \"success\");\n        // navigate to cat list view\n        this.$router.push(`/cats`);\n      }).catch(error => {\n        // log error\n        console.log(error);\n        // show error message\n        const errObject = error.response.data.errors[0];\n        showToastMessage(this, \"Alert\", `Error: ${errObject.field} ${errObject.defaultMessage}!`, \"danger\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;QACAF;QACAG;QACAC;MACA;IACA;EACA;EACAC;IACA;IACAC;MACAC;MACAC,MACAC,4CACAC;QACA;QACAC;QACA;QACAC,iBACA,MACA,SACA,+DACA,UACA;QACA;QACA;MACA,GACAC;QACA;QACAF;QACA;QACA;QACAC,iBACA,MACA,SACA,0DACA,SACA;MACA;IACA;EACA;AACA","names":["name","data","cat","ageInYears","picUrl","methods","onSubmit","event","axios","post","then","console","showToastMessage","catch"],"sourceRoot":"src/views","sources":["Assignee-create.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Create New Assignee</h1>\r\n        <div>\r\n            <b-form @submit=\"onSubmit\">\r\n                <b-form-group label=\"Pre:\">\r\n                    <b-form-input\r\n                        v-model=\"assignee.prename\"\r\n                        type=\"text\"\r\n                        required\r\n                    ></b-form-input>\r\n                </b-form-group>\r\n                <b-form-group label=\"Name:\">\r\n                    <b-form-input\r\n                        v-model=\"assignee.name\"\r\n                        type=\"text\"\r\n                        required\r\n                    ></b-form-input>\r\n                </b-form-group>\r\n                <b-form-group label=\"Email\">\r\n                    <b-form-input\r\n                        v-model=\"assignee.email\"\r\n                        type=\"text\"\r\n                    ></b-form-input>\r\n                </b-form-group>\r\n\r\n                <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\r\n            </b-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import configuration with API url; @ refers to the src directory\r\nimport config from \"@/config\";\r\n// import library for HTTP requests\r\nimport axios from \"axios\";\r\n// import JS method to use in this view\r\nimport { showToastMessage } from \"../js/util\";\r\n\r\nexport default {\r\n    name: \"CatCreate\",\r\n    data() {\r\n        return {\r\n            cat: {\r\n                name: \"\",\r\n                ageInYears: 0,\r\n                picUrl: \"\"\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // executed on form submit\r\n        onSubmit: function (event) {\r\n            event.preventDefault();\r\n            axios\r\n                .post(`${config.apiBaseUrl}/cats`, this.cat)\r\n                .then((response) => {\r\n                    // log response data to the browser console\r\n                    console.log(response.data);\r\n                    // show success message\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Successfully created a new cat with ID ${response.data.id}!`,\r\n                        \"success\"\r\n                    );\r\n                    // navigate to cat list view\r\n                    this.$router.push(`/cats`);\r\n                })\r\n                .catch((error) => {\r\n                    // log error\r\n                    console.log(error);\r\n                    // show error message\r\n                    const errObject = error.response.data.errors[0];\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Error: ${errObject.field} ${errObject.defaultMessage}!`,\r\n                        \"danger\"\r\n                    );\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}