{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\nexport default {\n  name: \"ToDos\",\n  data() {\n    return {\n      todo: {\n        title: \"\",\n        description: \"\",\n        finished: false,\n        assigneeIdList: [],\n        dueDate: \"\",\n        createdDate: \"\"\n      },\n      todoUpdate: {\n        title: \"\",\n        description: \"\",\n        finished: false,\n        assigneeIdList: [],\n        dueDate: \"\",\n        finishedDate: \"\"\n      },\n      fields: [{\n        key: \"action\",\n        label: 'Actions'\n      }, {\n        key: \"title\",\n        label: \"Title\",\n        sortable: true\n      }, {\n        key: \"assigneeList\",\n        label: \"Assignees\",\n        sortable: true\n      }, {\n        key: \"createdDate\",\n        label: \"Created Date\",\n        sortable: true\n      }, {\n        key: \"dueDate\",\n        label: \"Due Date\",\n        sortable: true\n      }, {\n        key: \"finished\",\n        label: \"Finished\"\n      }],\n      finishedFields: [{\n        key: \"action\",\n        label: 'Actions'\n      }, {\n        key: \"title\",\n        label: \"Title\",\n        sortable: true\n      }, {\n        key: \"assigneeList\",\n        label: \"Assignees\",\n        sortable: true\n      }, {\n        key: \"createdDate\",\n        label: \"Created Date\",\n        sortable: true\n      }, {\n        key: \"dueDate\",\n        label: \"Due Date\",\n        sortable: true\n      }, {\n        key: \"finishedDate\",\n        label: \"Finished Date\",\n        sortable: true\n      }, {\n        key: \"finished\",\n        label: \"Finished\"\n      }],\n      assigneeFields: [{\n        key: \"selected\",\n        label: 'Selected'\n      }, {\n        key: \"prename\",\n        label: \"Prename\",\n        sortable: true\n      }, {\n        key: \"name\",\n        label: \"Name\",\n        sortable: true\n      }],\n      items: [],\n      totalRows: 1,\n      perPage: 10,\n      currentPage: 1,\n      pageOptions: [5, 10, 15],\n      finishedToDos: [],\n      deleteMessage: \"\",\n      show: false,\n      show1: false,\n      selectMode: 'multi',\n      selected: [],\n      assignees: [],\n      filter: null,\n      filterOn: [\"title\", \"assigneeList\", \"createdDate\", \"dueDate\", \"finished\"]\n    };\n  },\n  computed: {\n    DateNow() {\n      let date = Date.now();\n      let dateString = new Date(date).toLocaleDateString();\n      return dateString;\n    }\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  methods: {\n    //filter items\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n      console.log(filteredItems);\n    },\n    //transform dto\n    DTO: function (todo) {\n      let assignees = [];\n      console.log(todo);\n      todo.assigneeList.forEach(assignee => assignees.push(JSON.stringify(assignee.id)));\n      todo.assigneeIdList = assignees;\n      //todo.createdDate = Date.parse(todo.createdDate.toString());\n      console.log(todo.createdDate);\n      //todo.dueDate = Date.parse(todo.dueDate.toString());\n      return todo;\n    },\n    // send GET request to API to fetch all assignees\n    fetchAllToDos: function () {\n      axios.get(`${config.apiBaseUrl}/todos`).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // assign response to data variable\n        this.items = response.data;\n        this.finishedToDos = response.data.filter(todo => todo.finished === true);\n        this.items.forEach(item => {\n          item.dueDate = new Date(item.dueDate);\n          item.createdDate = new Date(item.createdDate);\n          item.finishedDate = new Date(item.finishedDate);\n        });\n        this.items = this.items.filter(todo => todo.finished === false);\n      });\n    },\n    fetchAllAssignees: function (todo) {\n      //show model\n      this.show1 = true;\n      axios.get(`${config.apiBaseUrl}/assignees`).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // assign response to data variable\n        this.items = response.data;\n        this.toDoToUpdate = todo;\n      });\n    },\n    createToDo: function () {\n      //show modal to create new todo\n      this.show = true;\n    },\n    //executed on form submit for assignees\n    onSubmitAssignees: function (todo) {\n      //updates the assigneeList of the todo\n      let assignees = [];\n      console.log(this.selected);\n      this.selected.forEach(assignee => assignees.push(JSON.stringify(assignee.id)));\n      todo.assigneeIdList = assignees;\n      this.assignees = this.selected;\n      console.log(todo.assigneeIdList);\n      // close modal\n      this.show1 = false;\n    },\n    onRowSelected(items) {\n      this.selected = items;\n    },\n    deleteToDo: function (id) {\n      // send DELETE request to API to delete a specific cat by ID\n      axios.delete(`${config.apiBaseUrl}/todos/${id}`).then(() => {\n        // update view by removing deleted assignee\n        this.items = this.items.filter(item => item.id !== id);\n        this.finishedToDos = this.finishedToDos.filter(item => item.id !== id);\n        // show success message using BootstrapVue toast component\n        showToastMessage(this, \"Alert\", `Successfully deleted todo with ID ${id}!`, \"success\");\n      });\n    },\n    updateFinished: function (todo) {\n      let toDoToUpdate = this.DTO(todo);\n      // send PUT request to API to update a specific todo by ID\n      axios.put(`${config.apiBaseUrl}/todos/${todo.id}`, toDoToUpdate).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // show success message using BootstrapVue toast component\n        showToastMessage(this, \"Alert\", `Successfully updated finished status of todo with ID ${todo.id}!`, \"success\");\n        this.fetchAllToDos();\n      });\n    },\n    // executed on form submit\n    onSubmit: function (event) {\n      event.preventDefault();\n      axios.post(`${config.apiBaseUrl}/todos`, this.todo).then(response => {\n        this.todo.createdDate = this.DateNow;\n        // log response data to the browser console\n        console.log(response.data);\n        // show success message\n        showToastMessage(this, \"Alert\", `Successfully created a new todo with ID ${response.data.id}!`, \"success\");\n        // update view by adding created todo\n        this.fetchAllToDos();\n        // reset form\n        this.todo = {\n          title: \"\",\n          description: \"\",\n          finished: \"\",\n          assigneeIdList: \"\",\n          dueDate: \"\"\n        };\n        // close modal\n        this.show = false;\n      }).catch(error => {\n        // log error\n        console.log(error);\n        // show error message\n        const errObject = error.response.data.errors[0];\n        showToastMessage(this, \"Alert\", `Error: ${errObject.field} ${errObject.defaultMessage}!`, \"danger\");\n      });\n    }\n  },\n  // executed after the component has been started\n  created: function () {\n    this.fetchAllToDos();\n  }\n};","map":{"version":3,"mappings":";AAqUA;AACA;AACA;AACA;AACA;AACA;AAGA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAN;QACAC;QACAC;QACAC;QACAC;QACAG;MACA;MACAC,SACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;MAAA,EACA;MACAE,iBACA;QAAAH;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;MAAA,EACA;MACAG,iBACA;QAAAJ;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,EACA;MACAG;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;MACAC;IACA;IACA;IACAC;MACA;MACAD;MACAlC,0BACAoC;MACApC;MACA;MACAkC;MACA;MACA;IACA;IACA;IACAG;MACAC;QACA;QACAJ;QACA;QACA;QACA;QACA;UACAK;UACAA;UACAA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACAF;QACA;QACAJ;QACA;QACA;QACA;MACA;IACA;IAEAO;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACAR;MACA,sBACAE;MACApC;MACA;MACAkC;MACA;MACA;IAEA;IAEAS;MACA;IACA;IACAC;MACA;MACAN;QACA;QACA;QACA;QACA;QACAO,iBACA,MACA,SACA,4CACA,UACA;MACA;IACA;IACAC;MACA;MACA;MACAR,gEACA;QACA;QACAJ;QACA;QACAW,iBACA,MACA,SACA,oEACA,UACA;QACA;MACA;IACA;IACA;IACAE;MACAC;MACAV,MACAW,8CACAC;QACA;QACA;QACAhB;QACA;QACAW,iBACA,MACA,SACA,gEACA,UACA;QACA;QACA;QACA;QACA;UACA5C;UACAC;UACAC;UACAC;UACAC;QACA;QACA;QACA;MACA,GACA8C;QACA;QACAjB;QACA;QACA;QACAW,iBACA,MACA,SACA,0DACA,SACA;MACA;IAEA;EACA;EAEA;EACAO;IACA;EACA;AAGA","names":["name","data","todo","title","description","finished","assigneeIdList","dueDate","createdDate","todoUpdate","finishedDate","fields","key","label","sortable","finishedFields","assigneeFields","items","totalRows","perPage","currentPage","pageOptions","finishedToDos","deleteMessage","show","show1","selectMode","selected","assignees","filter","filterOn","computed","DateNow","mounted","methods","onFiltered","console","DTO","assignee","fetchAllToDos","axios","item","fetchAllAssignees","createToDo","onSubmitAssignees","onRowSelected","deleteToDo","showToastMessage","updateFinished","onSubmit","event","post","then","catch","created"],"sourceRoot":"src/views","sources":["ToDos.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <h1>ToDos</h1>\r\n\r\n        </div>\r\n        <div>\r\n            <b-card>\r\n                <b-row>\r\n                    <b-col lg=\"6\" class=\"my-1\">\r\n                        <b-form-group\r\n                            label=\"Filter\"\r\n                            label-for=\"filter-input\"\r\n                            label-cols-sm=\"3\"\r\n                            label-align-sm=\"right\"\r\n\r\n                            class=\"mb-0\"\r\n                            style=\"float: left\"\r\n                        >\r\n                            <b-input-group>\r\n                                <b-form-input\r\n                                    id=\"filter-input\"\r\n                                    v-model=\"filter\"\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                ></b-form-input>\r\n\r\n                                <b-input-group-append>\r\n                                    <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                                </b-input-group-append>\r\n                            </b-input-group>\r\n                        </b-form-group>\r\n                    </b-col>\r\n                    <b-col lg=\"6\" class=\"my-1\">\r\n                        <div class=\"createToDo\" style=\"float: right\">\r\n\r\n                            <b-btn class=\"m-1\" pill variant=\"success\" @click=\"createToDo\">\r\n                                <b-icon icon=\"plus\"></b-icon>\r\n                                Create ToDo\r\n                            </b-btn>\r\n\r\n                        </div>\r\n                    </b-col>\r\n                </b-row>\r\n                <template>\r\n                    <div id=\"todos\">\r\n                        <b-table\r\n                            noCollapse\r\n                            hover\r\n                            responsive\r\n                            :items=\"items\"\r\n                            :fields=\"fields\"\r\n                            :filter=\"filter\"\r\n                            @filtered=\"onFiltered\"\r\n                            :filter-included-fields=\"filterOn\"\r\n                            :per-page=\"perPage\"\r\n                            :current-page=\"currentPage\">\r\n                            <template v-slot:cell(action)=\"data\">\r\n                                <router-link :to=\"'/todos/' + data.item.id\">\r\n                                    <b-btn class=\"m-1\" size=\"sm\" pill variant=\"primary\">\r\n                                        <b-icon icon=\"pencil\"></b-icon>\r\n                                    </b-btn>\r\n                                </router-link>\r\n                                <b-btn class=\"m-1\" size=\"sm\" pill variant=\"danger\"\r\n                                       v-on:click=\"deleteToDo(data.item.id)\">\r\n                                    <b-icon icon=\"trash\"></b-icon>\r\n                                </b-btn>\r\n                            </template>\r\n                            <template v-slot:cell(finished)=\"data\">\r\n                                <b-form>\r\n                                    <b-form-checkbox\r\n                                        v-model=\"data.item.finished\"\r\n                                        v-on:change=\"updateFinished(data.item)\"\r\n                                    ></b-form-checkbox>\r\n                                </b-form>\r\n                            </template>\r\n                            <template v-slot:cell(assigneeList)=\"data\">\r\n                                <template>\r\n                                    <div class=\"assignees\" v-for=\"assignee in data.item.assigneeList\"\r\n                                         v-bind:key=\"assignee.id\">\r\n                                        <b-badge pill variant=\"light\" class=\"text-wrap mb-1\" size=\"l\"\r\n                                                 style=\"font-size: medium;font-weight: normal;\">\r\n                                            {{ assignee.name }}, {{ assignee.prename }}\r\n                                        </b-badge>\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                            <template v-slot:cell(createdDate)=\"data\">\r\n                                <template>\r\n                                    <b-form>\r\n                                        {{ data.item.createdDate.toLocaleDateString() }}\r\n                                    </b-form>\r\n                                </template>\r\n                            </template>\r\n                            <template v-slot:cell(dueDate)=\"data\">\r\n                                <template>\r\n                                    <b-form>\r\n                                        {{ data.item.dueDate.toLocaleDateString() }}\r\n                                    </b-form>\r\n                                </template>\r\n                            </template>\r\n                        </b-table>\r\n                    </div>\r\n                </template>\r\n                <b-card-footer>\r\n                    <b-row>\r\n                    <b-col sm=\"1\" md=\"2\" class=\"my-1\">\r\n                        <b-form-group\r\n                            label=\"Per page\"\r\n                            label-for=\"per-page-select\"\r\n                            label-align-sm=\"left\"\r\n                            label-size=\"sm\"\r\n                            class=\"mb-0\"\r\n                        >\r\n                            <b-form-select\r\n                                id=\"per-page-select\"\r\n                                v-model=\"perPage\"\r\n                                :options=\"pageOptions\"\r\n                                size=\"sm\"\r\n                            ></b-form-select>\r\n                        </b-form-group>\r\n                    </b-col>\r\n                    </b-row>\r\n                    <b-pagination\r\n                        v-model=\"currentPage\"\r\n                        :total-rows=\"totalRows\"\r\n                        :per-page=\"perPage\"\r\n                        align=\"fill\"\r\n                        size=\"sm\"\r\n                        class=\"my-0\"\r\n                    ></b-pagination>\r\n                    \r\n                </b-card-footer>\r\n            </b-card>\r\n            <b-card class=\"my-2\">\r\n                <b-button v-b-toggle.collapse-1 variant=\"light\">Finished ToDos\r\n                    <b-icon icon=\"chevron-down\"></b-icon>\r\n                </b-button>\r\n                <template>\r\n                    <b-collapse id=\"collapse-1\" class=\"mt-2\">\r\n                        <div id=\"finishedTodos\">\r\n                            <b-table noCollapse hover responsive :items=\"finishedToDos\" :fields=\"finishedFields\">\r\n                                <template v-slot:cell(action)=\"data\">\r\n                                    <router-link :to=\"'/todos/' + data.item.id\">\r\n                                        <b-btn class=\"m-1\" size=\"sm\" pill variant=\"primary\">\r\n                                            <b-icon icon=\"pencil\"></b-icon>\r\n                                        </b-btn>\r\n                                    </router-link>\r\n                                    <b-btn class=\"m-1\" size=\"sm\" pill variant=\"danger\"\r\n                                           v-on:click=\"deleteToDo(data.item.id)\">\r\n                                        <b-icon icon=\"trash\"></b-icon>\r\n                                    </b-btn>\r\n                                </template>\r\n                                <template v-slot:cell(finished)=\"data\">\r\n                                    <b-form>\r\n                                        <b-form-checkbox\r\n                                            v-model=\"data.item.finished\"\r\n                                            v-on:change=\"updateFinished(data.item)\"\r\n                                        ></b-form-checkbox>\r\n                                    </b-form>\r\n                                </template>\r\n                                <template v-slot:cell(assigneeList)=\"data\">\r\n                                    <template>\r\n                                        <div class=\"assignees\" v-for=\"assignee in data.item.assigneeList\"\r\n                                             v-bind:key=\"assignee.id\">\r\n                                            <b-badge pill variant=\"light\" class=\"text-wrap mb-1\" size=\"l\"\r\n                                                     style=\"font-size: medium;font-weight: normal;\">\r\n                                                {{ assignee.name }}, {{ assignee.prename }}\r\n                                            </b-badge>\r\n                                        </div>\r\n                                    </template>\r\n                                </template>\r\n                                <template v-slot:cell(createdDate)=\"data\">\r\n                                    <template>\r\n                                        <b-form>\r\n                                            {{ data.item.createdDate.toLocaleDateString() }}\r\n                                        </b-form>\r\n                                    </template>\r\n                                </template>\r\n                                <template v-slot:cell(dueDate)=\"data\">\r\n                                    <template>\r\n                                        <b-form>\r\n                                            {{ data.item.dueDate.toLocaleDateString() }}\r\n                                        </b-form>\r\n                                    </template>\r\n                                </template>\r\n                                <template v-slot:cell(finishedDate)=\"data\">\r\n                                    <template>\r\n                                        <b-form>\r\n                                            {{ data.item.finishedDate.toLocaleDateString() }}\r\n                                        </b-form>\r\n                                    </template>\r\n                                </template>\r\n                            </b-table>\r\n                        </div>\r\n                    </b-collapse>\r\n                </template>\r\n            </b-card>\r\n        </div>\r\n        <b-modal\r\n            v-model=\"show\"\r\n            ref=\"modal\"\r\n            title=\"Create an ToDo\"\r\n            hide-footer\r\n        >\r\n            <div>\r\n                <div>\r\n                    <b-form @submit=\"onSubmit\">\r\n                        <b-form-group label=\"Title:\">\r\n                            <b-form-input\r\n                                v-model=\"todo.title\"\r\n                                type=\"text\"\r\n                                required\r\n                                invalid-feedback=\"Name is required\"\r\n                            ></b-form-input>\r\n                        </b-form-group>\r\n                        <b-form-group label=\"Description:\">\r\n                            <b-form-input\r\n                                v-model=\"todo.description\"\r\n                                type=\"text\"\r\n                                required\r\n                            ></b-form-input>\r\n                        </b-form-group>\r\n                        <b-form-group>\r\n                            <b-form-row>\r\n                                <template>\r\n                                    <div class=\"assignees\" v-for=\"assignee in assignees\"\r\n                                         v-bind:key=\"assignee.id\">\r\n                                        <b-badge pill variant=\"light\" class=\"text-wrap m-1\" size=\"l\"\r\n                                                 style=\"font-size: medium;font-weight: normal;\">\r\n                                            {{ assignee.name }}, {{ assignee.prename }}\r\n                                        </b-badge>\r\n                                    </div>\r\n                                </template>\r\n                            </b-form-row>\r\n                            <b-btn class=\"m-1\" pill variant=\"outline-secondary\" @click=\"fetchAllAssignees(todo)\">\r\n                                Select Assignees\r\n                                <b-icon icon=\"person-plus\"></b-icon>\r\n                            </b-btn>\r\n                        </b-form-group>\r\n                        <b-form-group label=\"Due Date\">\r\n                            <b-form-datepicker id=\"example-datepicker\" v-model=\"todo.dueDate\"\r\n                                               class=\"mb-2\"></b-form-datepicker>\r\n                        </b-form-group>\r\n                        <div class=\"w-100\">\r\n                            <b-button\r\n                                variant=\"danger\"\r\n                                size=\"sm\"\r\n                                class=\"float-right\"\r\n                                @click=\"show = false\"\r\n                            >\r\n                                Cancel\r\n                            </b-button>\r\n                            <b-button\r\n                                variant=\"primary\"\r\n                                size=\"sm\"\r\n                                class=\"float-right\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </b-button>\r\n                        </div>\r\n                    </b-form>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal\r\n            v-model=\"show1\"\r\n            ref=\"modal\"\r\n            title=\"Select Assignees\"\r\n            hide-footer\r\n            size=\"lg\"\r\n        >\r\n            <div>\r\n                <div>\r\n                    <b-form @submit=\"onSubmitAssignees(todo)\">\r\n                        <b-table\r\n                            noCollapse\r\n                            hover\r\n                            responsive\r\n                            :items=\"items\"\r\n                            :fields=\"assigneeFields\"\r\n                            :select-mode=\"selectMode\" ref=\"selectableTable\"\r\n                            selectable\r\n                            @row-selected=\"onRowSelected\"\r\n                            data-search=\"true\">\r\n                            <template v-slot:cell(selected)=\"{rowSelected}\">\r\n                                <template v-if=\"rowSelected\">\r\n                                    <span aria-hidden=\"true\">&check;</span>\r\n                                    <span class=\"sr-only\">Selected</span>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <span aria-hidden=\"true\">&nbsp;</span>\r\n                                    <span class=\"sr-only\">Not selected</span>\r\n                                </template>\r\n                            </template>\r\n                        </b-table>\r\n                        <div class=\"w-100\">\r\n                            <b-button\r\n                                variant=\"danger\"\r\n                                size=\"sm\"\r\n                                class=\"float-right\"\r\n                                @click=\"show1 = false\"\r\n                            >\r\n                                Cancel\r\n                            </b-button>\r\n                            <b-button\r\n                                variant=\"primary\"\r\n                                size=\"sm\"\r\n                                class=\"float-right\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </b-button>\r\n                        </div>\r\n                    </b-form>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import configuration with API url; @ refers to the src directory\r\nimport config from \"@/config\";\r\n// import library for HTTP requests\r\nimport axios from \"axios\";\r\n// import JS method to use in this view\r\nimport {showToastMessage} from \"../js/util\";\r\n\r\n\r\nexport default {\r\n    name: \"ToDos\",\r\n    data() {\r\n        return {\r\n            todo: {\r\n                title: \"\",\r\n                description: \"\",\r\n                finished: false,\r\n                assigneeIdList: [],\r\n                dueDate: \"\",\r\n                createdDate: \"\"\r\n            },\r\n            todoUpdate: {\r\n                title: \"\",\r\n                description: \"\",\r\n                finished: false,\r\n                assigneeIdList: [],\r\n                dueDate: \"\",\r\n                finishedDate: \"\"\r\n            },\r\n            fields: [\r\n                {key: \"action\", label: 'Actions'},\r\n                {key: \"title\", label: \"Title\", sortable: true},\r\n                {key: \"assigneeList\", label: \"Assignees\", sortable: true},\r\n                {key: \"createdDate\", label: \"Created Date\", sortable: true},\r\n                {key: \"dueDate\", label: \"Due Date\", sortable: true},\r\n                {key: \"finished\", label: \"Finished\"}\r\n            ],\r\n            finishedFields: [\r\n                {key: \"action\", label: 'Actions'},\r\n                {key: \"title\", label: \"Title\", sortable: true},\r\n                {key: \"assigneeList\", label: \"Assignees\", sortable: true},\r\n                {key: \"createdDate\", label: \"Created Date\", sortable: true},\r\n                {key: \"dueDate\", label: \"Due Date\", sortable: true},\r\n                {key: \"finishedDate\", label: \"Finished Date\", sortable: true},\r\n                {key: \"finished\", label: \"Finished\"}\r\n            ],\r\n            assigneeFields: [\r\n                {key: \"selected\", label: 'Selected'},\r\n                {key: \"prename\", label: \"Prename\", sortable: true},\r\n                {key: \"name\", label: \"Name\", sortable: true}\r\n            ],\r\n            items: [],\r\n            totalRows: 1,\r\n            perPage: 10,\r\n            currentPage: 1,\r\n            pageOptions: [5, 10, 15],\r\n            finishedToDos: [],\r\n            deleteMessage: \"\",\r\n            show: false,\r\n            show1: false,\r\n            selectMode: 'multi',\r\n            selected: [],\r\n            assignees: [],\r\n            filter: null,\r\n            filterOn: [\"title\", \"assigneeList\", \"createdDate\", \"dueDate\", \"finished\"]\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        DateNow() {\r\n            let date = Date.now();\r\n            let dateString = new Date(date).toLocaleDateString();\r\n            return dateString;\r\n        }\r\n    },\r\n    mounted() {\r\n        // Set the initial number of items\r\n        this.totalRows = this.items.length\r\n    },\r\n    methods: {\r\n        //filter items\r\n        onFiltered(filteredItems) {\r\n            // Trigger pagination to update the number of buttons/pages due to filtering\r\n            this.totalRows = filteredItems.length\r\n            this.currentPage = 1\r\n            console.log(filteredItems)\r\n        },\r\n        //transform dto\r\n        DTO: function (todo) {\r\n            let assignees = [];\r\n            console.log(todo);\r\n            todo.assigneeList.forEach(\r\n                assignee => assignees.push(JSON.stringify(assignee.id)));\r\n            todo.assigneeIdList = assignees;\r\n            //todo.createdDate = Date.parse(todo.createdDate.toString());\r\n            console.log(todo.createdDate);\r\n            //todo.dueDate = Date.parse(todo.dueDate.toString());\r\n            return todo;\r\n        },\r\n        // send GET request to API to fetch all assignees\r\n        fetchAllToDos: function () {\r\n            axios.get(`${config.apiBaseUrl}/todos`).then((response) => {\r\n                // log response data to the browser console\r\n                console.log(response.data);\r\n                // assign response to data variable\r\n                this.items = response.data;\r\n                this.finishedToDos = response.data.filter(todo => todo.finished === true);\r\n                this.items.forEach(item => {\r\n                    item.dueDate = new Date(item.dueDate);\r\n                    item.createdDate = new Date(item.createdDate);\r\n                    item.finishedDate = new Date(item.finishedDate);\r\n                });\r\n                this.items = this.items.filter(todo => todo.finished === false);\r\n            });\r\n        },\r\n        fetchAllAssignees: function (todo) {\r\n            //show model\r\n            this.show1 = true;\r\n            axios.get(`${config.apiBaseUrl}/assignees`).then((response) => {\r\n                // log response data to the browser console\r\n                console.log(response.data);\r\n                // assign response to data variable\r\n                this.items = response.data;\r\n                this.toDoToUpdate = todo;\r\n            });\r\n        }\r\n        ,\r\n        createToDo: function () {\r\n            //show modal to create new todo\r\n            this.show = true;\r\n        },\r\n        //executed on form submit for assignees\r\n        onSubmitAssignees: function (todo) {\r\n            //updates the assigneeList of the todo\r\n            let assignees = [];\r\n            console.log(this.selected);\r\n            this.selected.forEach(\r\n                assignee => assignees.push(JSON.stringify(assignee.id)));\r\n            todo.assigneeIdList = assignees;\r\n            this.assignees = this.selected;\r\n            console.log(todo.assigneeIdList);\r\n            // close modal\r\n            this.show1 = false;\r\n\r\n        }\r\n        ,\r\n        onRowSelected(items) {\r\n            this.selected = items;\r\n        },\r\n        deleteToDo: function (id) {\r\n            // send DELETE request to API to delete a specific cat by ID\r\n            axios.delete(`${config.apiBaseUrl}/todos/${id}`).then(() => {\r\n                // update view by removing deleted assignee\r\n                this.items = this.items.filter((item) => item.id !== id);\r\n                this.finishedToDos = this.finishedToDos.filter((item) => item.id !== id);\r\n                // show success message using BootstrapVue toast component\r\n                showToastMessage(\r\n                    this,\r\n                    \"Alert\",\r\n                    `Successfully deleted todo with ID ${id}!`,\r\n                    \"success\"\r\n                );\r\n            });\r\n        },\r\n        updateFinished: function (todo) {\r\n            let toDoToUpdate = this.DTO(todo);\r\n            // send PUT request to API to update a specific todo by ID\r\n            axios.put(`${config.apiBaseUrl}/todos/${todo.id}`, toDoToUpdate\r\n            ).then((response) => {\r\n                // log response data to the browser console\r\n                console.log(response.data);\r\n                // show success message using BootstrapVue toast component\r\n                showToastMessage(\r\n                    this,\r\n                    \"Alert\",\r\n                    `Successfully updated finished status of todo with ID ${todo.id}!`,\r\n                    \"success\"\r\n                );\r\n                this.fetchAllToDos();\r\n            });\r\n        },\r\n        // executed on form submit\r\n        onSubmit: function (event) {\r\n            event.preventDefault();\r\n            axios\r\n                .post(`${config.apiBaseUrl}/todos`, this.todo)\r\n                .then((response) => {\r\n                    this.todo.createdDate = this.DateNow;\r\n                    // log response data to the browser console\r\n                    console.log(response.data);\r\n                    // show success message\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Successfully created a new todo with ID ${response.data.id}!`,\r\n                        \"success\"\r\n                    );\r\n                    // update view by adding created todo\r\n                    this.fetchAllToDos();\r\n                    // reset form\r\n                    this.todo = {\r\n                        title: \"\",\r\n                        description: \"\",\r\n                        finished: \"\",\r\n                        assigneeIdList: \"\",\r\n                        dueDate: \"\"\r\n                    };\r\n                    // close modal\r\n                    this.show = false;\r\n                })\r\n                .catch((error) => {\r\n                    // log error\r\n                    console.log(error);\r\n                    // show error message\r\n                    const errObject = error.response.data.errors[0];\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Error: ${errObject.field} ${errObject.defaultMessage}!`,\r\n                        \"danger\"\r\n                    );\r\n                });\r\n\r\n        }\r\n    },\r\n\r\n    // executed after the component has been started\r\n    created: function () {\r\n        this.fetchAllToDos();\r\n    }\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n#assignees {\r\n    text-align: center;\r\n    margin-top: 60px;\r\n}\r\n\r\nthead, tbody, tfoot, tr, td, th {\r\n    text-align: left;\r\n}\r\n\r\nb-btn {\r\n\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}