{"ast":null,"code":"// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\nexport default {\n  name: \"Assignees\",\n  data() {\n    return {\n      fields: [{\n        key: \"prename\",\n        label: \"Prename\"\n      }, {\n        key: \"name\",\n        label: \"Name\"\n      }, {\n        key: \"email\",\n        label: \"Email\"\n      }],\n      assignees: [],\n      deleteMessage: \"\"\n    };\n  },\n  methods: {\n    // send GET request to API to fetch all cats\n    fetchAllAssignees: function () {\n      axios.get(`${config.apiBaseUrl}/assignees`).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // assign response to data variable\n        this.assignees = response.data;\n      });\n    },\n    deleteCat: function (id) {\n      // send DELETE request to API to delete a specific cat by ID\n      axios.delete(`${config.apiBaseUrl}/cats/${id}`).then(() => {\n        // update view by removing deleted cat\n        this.cats = this.cats.filter(cat => cat.id !== id);\n        // show success message using BootstrapVue toast component\n        showToastMessage(this, \"Alert\", `Successfully deleted cat with ID ${id}!`, \"success\");\n      });\n    }\n  },\n  // executed after the component has been started\n  created: function () {\n    this.fetchAllAssignees();\n  }\n};","map":{"version":3,"mappings":"AAeA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC,SACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;QACA;QACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAF;QACA;QACA;QACA;QACAG,iBACA,MACA,SACA,2CACA,UACA;MACA;IACA;EACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","fields","key","label","assignees","deleteMessage","methods","fetchAllAssignees","axios","console","deleteCat","showToastMessage","created"],"sourceRoot":"src/views","sources":["Assignees.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Assignees</h1>\r\n        <div>\r\n            <template>\r\n                <div id=\"assignees\">\r\n                    <b-table noCollapse hover responsive :items=\"items\" :fields=\"fields\"></b-table>\r\n                </div>\r\n            </template>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import configuration with API url; @ refers to the src directory\r\nimport config from \"@/config\";\r\n// import library for HTTP requests\r\nimport axios from \"axios\";\r\n// import JS method to use in this view\r\nimport { showToastMessage } from \"../js/util\";\r\n\r\nexport default {\r\n    name: \"Assignees\",\r\n    data() {\r\n        return {\r\n            fields: [\r\n                { key: \"prename\", label: \"Prename\"},\r\n                { key: \"name\", label: \"Name\" },\r\n                { key: \"email\", label: \"Email\" }\r\n            ],\r\n            assignees: [],\r\n            deleteMessage: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        // send GET request to API to fetch all cats\r\n        fetchAllAssignees: function () {\r\n            axios.get(`${config.apiBaseUrl}/assignees`).then((response) => {\r\n                // log response data to the browser console\r\n                console.log(response.data);\r\n                // assign response to data variable\r\n                this.assignees = response.data;\r\n            });\r\n        },\r\n        deleteCat: function (id) {\r\n            // send DELETE request to API to delete a specific cat by ID\r\n            axios.delete(`${config.apiBaseUrl}/cats/${id}`).then(() => {\r\n                // update view by removing deleted cat\r\n                this.cats = this.cats.filter((cat) => cat.id !== id);\r\n                // show success message using BootstrapVue toast component\r\n                showToastMessage(\r\n                    this,\r\n                    \"Alert\",\r\n                    `Successfully deleted cat with ID ${id}!`,\r\n                    \"success\"\r\n                );\r\n            });\r\n        }\r\n    },\r\n    // executed after the component has been started\r\n    created: function () {\r\n        this.fetchAllAssignees();\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n#assignees {\r\n    text-align: center;\r\n    margin-top: 60px;\r\n}\r\nthead, tbody, tfoot, tr, td, th {\r\n    text-align: left;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}