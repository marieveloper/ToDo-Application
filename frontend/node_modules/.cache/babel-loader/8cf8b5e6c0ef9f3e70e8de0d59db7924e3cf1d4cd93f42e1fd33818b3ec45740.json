{"ast":null,"code":"// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\nexport default {\n  name: \"Cats\",\n  data() {\n    return {\n      cats: [],\n      deleteMessage: \"\"\n    };\n  },\n  methods: {\n    // send GET request to API to fetch all cats\n    fetchAllCats: function () {\n      axios.get(`${config.apiBaseUrl}/cats`).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // assign response to data variable\n        this.cats = response.data;\n      });\n    },\n    deleteCat: function (id) {\n      // send DELETE request to API to delete a specific cat by ID\n      axios.delete(`${config.apiBaseUrl}/cats/${id}`).then(() => {\n        // update view by removing deleted cat\n        this.cats = this.cats.filter(cat => cat.id !== id);\n        // show success message using BootstrapVue toast component\n        showToastMessage(this, \"Alert\", `Successfully deleted cat with ID ${id}!`, \"success\");\n      });\n    }\n  },\n  // executed after the component has been started\n  created: function () {\n    this.fetchAllCats();\n  }\n};","map":{"version":3,"mappings":"AAgCA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;QACA;QACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAF;QACA;QACA;QACA;QACAG,iBACA,MACA,SACA,2CACA,UACA;MACA;IACA;EACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","cats","deleteMessage","methods","fetchAllCats","axios","console","deleteCat","showToastMessage","created"],"sourceRoot":"src/views","sources":["Cats.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Cats</h1>\n        <div>\n            <b-alert v-bind:show=\"cats.length === 0\" variant=\"warning\">\n                No cat available on the server...\n            </b-alert>\n\n            <div class=\"catBox\" v-for=\"cat in cats\" v-bind:key=\"cat.id\">\n                <h3>{{ cat.name }}</h3>\n                <p>Age: {{ cat.ageInYears }} years</p>\n                <b-img\n                    v-bind:alt=\"cat.name\"\n                    v-bind:src=\"cat.picUrl\"\n                    class=\"catLogo\"\n                    rounded=\"circle\"\n                />\n                <div>\n                    <b-button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        v-on:click=\"deleteCat(cat.id)\"\n                    >\n                        <b-icon-trash></b-icon-trash> Delete\n                    </b-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\n\nexport default {\n    name: \"Cats\",\n    data() {\n        return {\n            cats: [],\n            deleteMessage: \"\"\n        };\n    },\n    methods: {\n        // send GET request to API to fetch all cats\n        fetchAllCats: function () {\n            axios.get(`${config.apiBaseUrl}/cats`).then((response) => {\n                // log response data to the browser console\n                console.log(response.data);\n                // assign response to data variable\n                this.cats = response.data;\n            });\n        },\n        deleteCat: function (id) {\n            // send DELETE request to API to delete a specific cat by ID\n            axios.delete(`${config.apiBaseUrl}/cats/${id}`).then(() => {\n                // update view by removing deleted cat\n                this.cats = this.cats.filter((cat) => cat.id !== id);\n                // show success message using BootstrapVue toast component\n                showToastMessage(\n                    this,\n                    \"Alert\",\n                    `Successfully deleted cat with ID ${id}!`,\n                    \"success\"\n                );\n            });\n        }\n    },\n    // executed after the component has been started\n    created: function () {\n        this.fetchAllCats();\n    }\n};\n</script>\n\n<style>\n.catBox {\n    padding: 10px;\n    margin: 3px;\n    border: 1px solid #42b983;\n    float: left;\n    min-width: 250px;\n    text-align: center;\n}\n\n.catLogo {\n    height: 200px;\n}\n\n.catBox button {\n    margin: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}