{"ast":null,"code":"// import configuration with API url; @ refers to the src directory\nimport config from \"@/config\";\n// import library for HTTP requests\nimport axios from \"axios\";\n// import JS method to use in this view\nimport { showToastMessage } from \"../js/util\";\nimport { fetchAllAssignees } from \"../js/assignee-rest-client\";\nexport default {\n  name: \"Assignees\",\n  data() {\n    return {\n      assignee: {\n        prename: \"\",\n        name: \"\",\n        email: \"\"\n      },\n      fields: [{\n        key: \"action\",\n        label: 'Actions'\n      }, {\n        key: \"prename\",\n        label: \"Prename\",\n        sortable: true\n      }, {\n        key: \"name\",\n        label: \"Name\",\n        sortable: true\n      }, {\n        key: \"email\",\n        label: \"Email\",\n        sortable: true\n      }],\n      items: [],\n      deleteMessage: \"\",\n      show: false\n    };\n  },\n  methods: {\n    // send GET request to API to fetch all assignees\n    fetchAllAssignees: async function () {\n      this.items = await fetchAllAssignees();\n    },\n    deleteAssignee: function (id) {\n      // send DELETE request to API to delete a specific cat by ID\n      axios.delete(`${config.apiBaseUrl}/assignees/${id}`).then(() => {\n        // update view by removing deleted assignee\n        this.items = this.items.filter(item => item.id !== id);\n        // show success message using BootstrapVue toast component\n        showToastMessage(this, \"Alert\", `Successfully deleted assignee with ID ${id}!`, \"success\");\n      });\n    },\n    // executed on form submit\n    onSubmit: function (event) {\n      event.preventDefault();\n      axios.post(`${config.apiBaseUrl}/assignees`, this.assignee).then(response => {\n        // log response data to the browser console\n        console.log(response.data);\n        // show success message\n        showToastMessage(this, \"Alert\", `Successfully created a new assignee with ID ${response.data.id}!`, \"success\");\n        // update view by adding created assignee\n        this.fetchAllAssignees();\n        // reset form\n        this.assignee = {\n          prename: \"\",\n          name: \"\",\n          email: \"\"\n        };\n        // close modal\n        this.show = false;\n      }).catch(error => {\n        // log error\n        console.log(error);\n        // show error message\n        const errObject = error.response.data.errors[0];\n        showToastMessage(this, \"Alert\", `Error: ${errObject.field} ${errObject.defaultMessage}!`, \"danger\");\n      });\n    }\n  },\n  // executed after the component has been started\n  created: function () {\n    this.fetchAllAssignees();\n  }\n};","map":{"version":3,"mappings":"AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;QACAC;QACAH;QACAI;MACA;MACAC,SACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;MACAC;QACA;QACA;QACA;QACAC,iBACA,MACA,SACA,gDACA,UACA;MACA;IACA;IACA;IACAC;MACAC;MACAH,MACAI,sDACAC;QACA;QACAC;QACA;QACAL,iBACA,MACA,SACA,oEACA,UACA;QACA;QACA;QACA;QACA;UACAb;UACAH;UACAI;QACA;QACA;QACA;MACA,GACAkB;QACA;QACAD;QACA;QACA;QACAL,iBACA,MACA,SACA,0DACA,SACA;MACA;IACA;EACA;EACA;EACAO;IACA;EACA;AACA","names":["name","data","assignee","prename","email","fields","key","label","sortable","items","deleteMessage","show","methods","fetchAllAssignees","deleteAssignee","axios","showToastMessage","onSubmit","event","post","then","console","catch","created"],"sourceRoot":"src/views","sources":["Assignees.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <b-card>\r\n                <b-card-header> <h1>Assignees</h1></b-card-header>\r\n                <div class=\"createAssignee my-3\" style=\"float: right\" >\r\n                    <b-btn pill variant=\"outline-success\" @click=\"show=true\">\r\n                        <b-icon icon=\"plus\"></b-icon>\r\n                        Create Assignee\r\n                    </b-btn>\r\n                </div>\r\n                <template>\r\n                    <div id=\"assignees\">\r\n                        <b-table noCollapse hover responsive :items=\"items\" :fields=\"fields\">\r\n                            <template v-slot:cell(action)=\"data\">\r\n                                <router-link :to=\"'/assignees/' + data.item.id\">\r\n                                    <b-btn class=\"m-1\" size=\"sm\" pill variant=\"outline-primary\">\r\n                                        <b-icon icon=\"pencil\"></b-icon>\r\n                                    </b-btn>\r\n                                </router-link>\r\n                                <b-btn class=\"m-1\" size=\"sm\" pill variant=\"outline-danger\" v-on:click=\"deleteAssignee(data.item.id)\">\r\n                                <b-icon icon=\"trash\"></b-icon>\r\n                            </b-btn>\r\n                            </template>\r\n                        </b-table>\r\n                    </div>\r\n                </template>\r\n            </b-card>\r\n        </div>\r\n        <b-modal\r\n            v-model=\"show\"\r\n            ref=\"modal\"\r\n            title=\"Create an Assignee\"\r\n            hide-footer\r\n        >\r\n            <div>\r\n                <div>\r\n                    <b-form @submit=\"onSubmit\">\r\n                        <b-form-group label=\"Prename:\">\r\n                            <b-form-input\r\n                                v-model=\"assignee.prename\"\r\n                                type=\"text\"\r\n                                required\r\n                                invalid-feedback=\"Name is required\"\r\n                            ></b-form-input>\r\n                        </b-form-group>\r\n                        <b-form-group label=\"Name:\">\r\n                            <b-form-input\r\n                                v-model=\"assignee.name\"\r\n                                type=\"text\"\r\n                                required\r\n                            ></b-form-input>\r\n                        </b-form-group>\r\n                        <b-form-group label=\"Email\">\r\n                            <b-form-input\r\n                                v-model=\"assignee.email\"\r\n                                type=\"text\"\r\n                            ></b-form-input>\r\n                        </b-form-group>\r\n                        <div class=\"w-100\">\r\n                            <b-button\r\n                                pill\r\n                                variant=\"outline-danger\"\r\n                                class=\"float-right m-1\"\r\n                                @click=\"show = false\"\r\n                            >\r\n                                Cancel\r\n                            </b-button>\r\n                            <b-button\r\n                                pill\r\n                                variant=\"outline-primary\"\r\n                                class=\"float-right m-1\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </b-button>\r\n                        </div>\r\n                    </b-form>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import configuration with API url; @ refers to the src directory\r\nimport config from \"@/config\";\r\n// import library for HTTP requests\r\nimport axios from \"axios\";\r\n// import JS method to use in this view\r\nimport {showToastMessage} from \"../js/util\";\r\nimport {fetchAllAssignees}  from \"../js/assignee-rest-client\";\r\n\r\nexport default {\r\n    name: \"Assignees\",\r\n    data() {\r\n        return {\r\n            assignee: {\r\n                prename: \"\",\r\n                name: \"\",\r\n                email: \"\"\r\n            },\r\n            fields: [\r\n                {key: \"action\", label: 'Actions'},\r\n                {key: \"prename\", label: \"Prename\", sortable: true},\r\n                {key: \"name\", label: \"Name\", sortable: true},\r\n                {key: \"email\", label: \"Email\", sortable: true}\r\n            ],\r\n            items: [],\r\n            deleteMessage: \"\",\r\n            show: false\r\n        };\r\n    },\r\n    methods: {\r\n        // send GET request to API to fetch all assignees\r\n        fetchAllAssignees: async function () {\r\n            this.items = await fetchAllAssignees();\r\n        },\r\n        deleteAssignee: function (id) {\r\n            // send DELETE request to API to delete a specific cat by ID\r\n            axios.delete(`${config.apiBaseUrl}/assignees/${id}`).then(() => {\r\n                // update view by removing deleted assignee\r\n                this.items = this.items.filter((item) => item.id !== id);\r\n                // show success message using BootstrapVue toast component\r\n                showToastMessage(\r\n                    this,\r\n                    \"Alert\",\r\n                    `Successfully deleted assignee with ID ${id}!`,\r\n                    \"success\"\r\n                );\r\n            });\r\n        },\r\n        // executed on form submit\r\n        onSubmit: function (event) {\r\n            event.preventDefault();\r\n            axios\r\n                .post(`${config.apiBaseUrl}/assignees`, this.assignee)\r\n                .then((response) => {\r\n                    // log response data to the browser console\r\n                    console.log(response.data);\r\n                    // show success message\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Successfully created a new assignee with ID ${response.data.id}!`,\r\n                        \"success\"\r\n                    );\r\n                    // update view by adding created assignee\r\n                    this.fetchAllAssignees();\r\n                    // reset form\r\n                    this.assignee = {\r\n                        prename: \"\",\r\n                        name: \"\",\r\n                        email: \"\"\r\n                    };\r\n                    // close modal\r\n                    this.show = false;\r\n                })\r\n                .catch((error) => {\r\n                    // log error\r\n                    console.log(error);\r\n                    // show error message\r\n                    const errObject = error.response.data.errors[0];\r\n                    showToastMessage(\r\n                        this,\r\n                        \"Alert\",\r\n                        `Error: ${errObject.field} ${errObject.defaultMessage}!`,\r\n                        \"danger\"\r\n                    );\r\n                });\r\n        }\r\n    },\r\n    // executed after the component has been started\r\n    created: function () {\r\n        this.fetchAllAssignees();\r\n    }\r\n};\r\n</script>\r\n<style>\r\n@import '../assets/stylesheet.css';\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}